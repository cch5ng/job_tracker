[{"/Users/carolchung/programming/projects/job_tracker/client/src/reportWebVitals.js":"1","/Users/carolchung/programming/projects/job_tracker/client/src/App.js":"2","/Users/carolchung/programming/projects/job_tracker/client/src/auth/auth0-provider-with-history.js":"3","/Users/carolchung/programming/projects/job_tracker/client/src/context/auth-context.js":"4","/Users/carolchung/programming/projects/job_tracker/client/src/context/jobs-context.js":"5","/Users/carolchung/programming/projects/job_tracker/client/src/components/Home.js":"6","/Users/carolchung/programming/projects/job_tracker/client/src/components/UnauthenticatedApp/UnauthenticatedApp.js":"7","/Users/carolchung/programming/projects/job_tracker/client/src/components/AuthenticatedApp/AuthenticatedApp.js":"8","/Users/carolchung/programming/projects/job_tracker/client/src/auth/ProtectedRoute.js":"9","/Users/carolchung/programming/projects/job_tracker/client/src/components/Profile.js":"10","/Users/carolchung/programming/projects/job_tracker/client/src/utils/index.js":"11","/Users/carolchung/programming/projects/job_tracker/client/src/components/Jobs/Jobs.js":"12","/Users/carolchung/programming/projects/job_tracker/client/src/views/ExternalApi.js":"13","/Users/carolchung/programming/projects/job_tracker/client/src/components/Events/EventsFormCreate.js":"14","/Users/carolchung/programming/projects/job_tracker/client/src/components/Events/EventsFormEdit.js":"15","/Users/carolchung/programming/projects/job_tracker/client/src/components/Jobs/JobsFormCreate.js":"16","/Users/carolchung/programming/projects/job_tracker/client/src/components/Jobs/JobsFormEdit.js":"17","/Users/carolchung/programming/projects/job_tracker/client/src/components/Events/Events.js":"18","/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/AuthenticatedNavBar.js":"19","/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/LoginButton.js":"20","/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/UnauthenticatedNavBar.js":"21","/Users/carolchung/programming/projects/job_tracker/client/src/components/Events/EventsForm.js":"22","/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/MainNav.js":"23","/Users/carolchung/programming/projects/job_tracker/client/src/components/Loading.js":"24","/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/AuthNav.js":"25","/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/AuthenticationButton.js":"26","/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/LogoutButton.js":"27","/Users/carolchung/programming/projects/job_tracker/client/src/index.tsx":"28","/Users/carolchung/programming/projects/job_tracker/client/src/components/Jobs/JobsForm.js":"29","/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/Button.tsx":"30","/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/Checkbox.tsx":"31","/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/Input.tsx":"32","/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/SelectGroup.tsx":"33","/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/TextArea.tsx":"34","/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/Alert.js":"35","/Users/carolchung/programming/projects/job_tracker/client/src/context/alert-context.js":"36"},{"size":362,"mtime":1606885884000,"results":"37","hashOfConfig":"38"},{"size":875,"mtime":1614275130000,"results":"39","hashOfConfig":"38"},{"size":792,"mtime":1609888104000,"results":"40","hashOfConfig":"38"},{"size":2465,"mtime":1609888104000,"results":"41","hashOfConfig":"38"},{"size":2086,"mtime":1614275130000,"results":"42","hashOfConfig":"38"},{"size":373,"mtime":1609737328000,"results":"43","hashOfConfig":"38"},{"size":705,"mtime":1609207514000,"results":"44","hashOfConfig":"38"},{"size":2139,"mtime":1614279070000,"results":"45","hashOfConfig":"38"},{"size":398,"mtime":1606885884000,"results":"46","hashOfConfig":"38"},{"size":929,"mtime":1606885884000,"results":"47","hashOfConfig":"38"},{"size":1467,"mtime":1612073626000,"results":"48","hashOfConfig":"38"},{"size":4156,"mtime":1613421407000,"results":"49","hashOfConfig":"38"},{"size":2218,"mtime":1606885885000,"results":"50","hashOfConfig":"38"},{"size":277,"mtime":1611782254000,"results":"51","hashOfConfig":"38"},{"size":276,"mtime":1611782254000,"results":"52","hashOfConfig":"38"},{"size":175,"mtime":1611782255000,"results":"53","hashOfConfig":"38"},{"size":259,"mtime":1611782255000,"results":"54","hashOfConfig":"38"},{"size":10855,"mtime":1614280449000,"results":"55","hashOfConfig":"38"},{"size":1035,"mtime":1610564674000,"results":"56","hashOfConfig":"38"},{"size":366,"mtime":1609207514000,"results":"57","hashOfConfig":"38"},{"size":379,"mtime":1609207514000,"results":"58","hashOfConfig":"38"},{"size":8771,"mtime":1614280514000,"results":"59","hashOfConfig":"38"},{"size":667,"mtime":1609888104000,"results":"60","hashOfConfig":"38"},{"size":252,"mtime":1606885884000,"results":"61","hashOfConfig":"38"},{"size":215,"mtime":1608950012000,"results":"62","hashOfConfig":"38"},{"size":344,"mtime":1608950012000,"results":"63","hashOfConfig":"38"},{"size":416,"mtime":1608950012000,"results":"64","hashOfConfig":"38"},{"size":843,"mtime":1611782255000,"results":"65","hashOfConfig":"38"},{"size":9235,"mtime":1614280335000,"results":"66","hashOfConfig":"38"},{"size":691,"mtime":1611782254000,"results":"67","hashOfConfig":"38"},{"size":1495,"mtime":1611782254000,"results":"68","hashOfConfig":"38"},{"size":1056,"mtime":1614280303000,"results":"69","hashOfConfig":"38"},{"size":1078,"mtime":1611782254000,"results":"70","hashOfConfig":"38"},{"size":823,"mtime":1611782255000,"results":"71","hashOfConfig":"38"},{"size":2065,"mtime":1614277208000,"results":"72","hashOfConfig":"38"},{"size":1815,"mtime":1614278236000,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"148kfyl",{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"139"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/carolchung/programming/projects/job_tracker/client/src/reportWebVitals.js",[],["158","159"],"/Users/carolchung/programming/projects/job_tracker/client/src/App.js",["160","161","162"],"/Users/carolchung/programming/projects/job_tracker/client/src/auth/auth0-provider-with-history.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/context/auth-context.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/context/jobs-context.js",["163"],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Home.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/UnauthenticatedApp/UnauthenticatedApp.js",["164","165","166","167","168","169"],"import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport LoginButton from \"../Header/LoginButton\";\nimport UnauthenticatedNavBar from '../Header/UnauthenticatedNavBar';\nimport styles from './UnauthenticatedApp.module.css';\nimport splashScreen from '../..//daoud-abismail-unsplash.jpg';\n\nconst UnauthenticatedApp = () => {\n  return (\n    <div>\n      <UnauthenticatedNavBar />\n      <main>\n        <div className={styles.splash_screen_container} >\n          <img src={splashScreen} className={styles.splash_screen} />\n          <LoginButton />\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default UnauthenticatedApp","/Users/carolchung/programming/projects/job_tracker/client/src/components/AuthenticatedApp/AuthenticatedApp.js",["170","171","172","173","174","175"],"import React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport AuthenticatedNavBar from \"../Header/AuthenticatedNavBar\";\nimport Profile from '../Profile';\nimport ProtectedRoute from \"../../auth/ProtectedRoute\";\nimport ExternalApi from '../../views/ExternalApi';\nimport Jobs from '../Jobs/Jobs';\nimport JobsFormCreate from '../Jobs/JobsFormCreate';\nimport JobsFormEdit from '../Jobs/JobsFormEdit';\nimport EventsFormCreate from '../Events/EventsFormCreate';\nimport EventsFormEdit from '../Events/EventsFormEdit';\nimport Events from '../Events/Events';\nimport Alert from '../FormShared/Alert';\n\nconst AuthenticatedApp = () => {\n  const [showNavMenu, setShowNavMenu] = useState(false);\n\n  const toggleNavMenuDisplay = (ev) => {\n    const {className} = ev.target;\n    if (className && (className.indexOf('close_icon') === -1 || className.indexOf('hamburger') === -1) && showNavMenu) {\n      setShowNavMenu(!showNavMenu);\n    } else if (className && className.indexOf('close_icon') > -1 || className.indexOf('hamburger') > -1) {\n      setShowNavMenu(!showNavMenu);\n    } else {\n      console.log('to handle');\n    }\n  }\n\n  return (\n    <div>\n      <AuthenticatedNavBar showNavMenu={showNavMenu} toggleNavMenuDisplay={toggleNavMenuDisplay} />\n      <main className=\"main\" >\n        <Switch>\n          <ProtectedRoute path=\"/profile\" component={Profile} />\n          <ProtectedRoute path=\"/external-api\" component={ExternalApi} />\n          <ProtectedRoute exact path=\"/jobs/new\" component={JobsFormCreate} />\n          <ProtectedRoute exact path=\"/jobs/:jobId/events\" component={Events} />\n          <ProtectedRoute exact path=\"/jobs/:jobId\" component={JobsFormEdit} />\n          <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n          <ProtectedRoute exact path=\"/events/new/:jobId\" component={EventsFormCreate} />\n          <ProtectedRoute exact path=\"/events/edit/:eventId\" component={EventsFormEdit} />\n          <ProtectedRoute exact path=\"/events\" component={Events} />\n        </Switch>\n      </main>\n    </div>\n    )\n}\n\nexport default AuthenticatedApp;","/Users/carolchung/programming/projects/job_tracker/client/src/auth/ProtectedRoute.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Profile.js",["176","177","178","179"],"import React, { useEffect, useState } from \"react\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport Loading from \"../components/Loading\";\n\nconst Profile = () => {\n  const { user } = useAuth0();\n  const { name, picture, email } = user;\n\n  return (\n    <div>\n      <div className=\"row align-items-center profile-header\">\n        <div className=\"col-md-2 mb-3\">\n          <img\n            src={picture}\n            alt=\"Profile\"\n            className=\"rounded-circle img-fluid profile-picture mb-3 mb-md-0\"\n          />\n        </div>\n        <div className=\"col-md text-center text-md-left\">\n          <h2>{name}</h2>\n          <p className=\"lead text-muted\">{email}</p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <pre className=\"col-12 text-light bg-dark p-4\">\n          {JSON.stringify(user, null, 2)}\n        </pre>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/carolchung/programming/projects/job_tracker/client/src/utils/index.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Jobs/Jobs.js",["180","181","182","183","184","185","186","187","188","189","190","191","192"],"import * as React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport classNames from 'classnames/bind';\nimport {useAppAuth} from '../../context/auth-context';\nimport {useJobs} from '../../context/jobs-context';\nimport {Link, useHistory} from 'react-router-dom';\nimport {getDictFromAr, getArFromDict, orderArByProp} from '../../utils';\nimport styles from './Jobs.module.css';\nimport Button from '../FormShared/Button';\nimport Input from '../FormShared/Input';\n\nlet cx = classNames.bind(styles);\n\nfunction Jobs() {\n  const [jobFilterStr, setJobFilterStr] = React.useState('');\n  const { isAuthenticated, user, getAccessTokenSilently } = useAuth0();\n  const { name, picture, email } = user;\n  const { login, getUserGuid, userGuid, userEmail, sessionToken } = useAppAuth();\n  const { jobsDict, updateJobsDict } = useJobs();\n\n  const inputOnChangeHandler = (ev) => {\n    const {name, value} = ev.target;\n    if (name === 'jobFilterStr') {\n      setJobFilterStr(value);\n    }\n  }\n\n  const handleArchiveButtonClick = (ev) => {\n    ev.preventDefault();\n    const {name} = ev.target;\n\n    if (name && sessionToken) {\n      fetch(`http://localhost:3000/api/jobs/archive/${name}`, {\n        method: 'PUT',\n        headers: {Authorization: `Bearer ${sessionToken}`}\n      })\n        .then(resp => resp.json())\n        .then(json => {\n          if (json.status === 'success') {\n            let updatedJob = {...jobsDict[name], status: 'archived'};\n            updateJobsDict(updatedJob);\n          }\n        })\n        .catch(err => console.error('err', err))  \n    }\n  }\n\n  let jobsAr = [];\n  if (jobsDict) {\n    jobsAr = getArFromDict(jobsDict);\n    orderArByProp(jobsAr, 'created_at', 'desc')\n  }\n  if (jobsAr.length && jobFilterStr && jobFilterStr.length) {\n    jobsAr = jobsAr.filter(job => {\n      if (job.name && job.company_name) {\n        return job.name.indexOf(jobFilterStr) > -1 || job.company_name.indexOf(jobFilterStr) > -1;\n      }\n      if (job.name) {\n        return job.name.indexOf(jobFilterStr) > -1\n      }\n      if (job.company_name) {\n        return job.company_name.indexOf(jobFilterStr) > -1\n      }\n    })\n  }\n\n  return (\n    <div>\n      <h1 className=\"view_title\">JOBS LIST</h1>\n      <Link to=\"/jobs/new\" className=\"link_icon\">\n        <div className=\"add_icon\">+</div>\n      </Link>\n      <Input type=\"text\" value={jobFilterStr} name=\"jobFilterStr\" \n        inputOnChangeHandler={inputOnChangeHandler} placeholder=\"Search by company or role\" />\n\n      <div className=\"list_container\">\n        {jobsAr.map(job => {\n          let url = `/jobs/${job.guid}`;\n          let newEventUrl = `events/new/${job.guid}`;\n          let eventsUrl = `jobs/${job.guid}/events`;\n          return (\n            <div key={job.guid} className=\"list_item_container\">\n              <Link to={url}>\n                <h2>{job.name}</h2>\n                <div><span className=\"list_item_label\">status</span> {job.status}</div>\n                <div><span className=\"list_item_label\">company</span> {job.company_name}</div>\n                <div><span className=\"list_item_label\">url</span> {job.url}</div>\n                <div><span className=\"list_item_label\">description</span> {job.description}</div>\n                <div><span className=\"list_item_label\">questions</span> {job.questions}</div>\n                <div><span className=\"list_item_label\">source</span> {job.source}</div>\n                {job.created_at && (\n                  <div className=\"list_item_small\">created {job.created_at}</div>\n                )}\n              </Link>\n              <div className=\"button_container\">\n                <Link to={newEventUrl}>\n                  <Button name=\"button_save\" label=\"Add event\" clickHandler={() => {}} size=\"wide\"/>\n                  </Link>\n                <Link to={eventsUrl}>\n                  <Button name=\"button_events\" label=\"Get events\" clickHandler={() => {}} size=\"wide\"/>\n                </Link>\n                <Button name={job.guid} label=\"Hide\" clickHandler={handleArchiveButtonClick} size=\"wide\"/>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Jobs;","/Users/carolchung/programming/projects/job_tracker/client/src/views/ExternalApi.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Events/EventsFormCreate.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Events/EventsFormEdit.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Jobs/JobsFormCreate.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Jobs/JobsFormEdit.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Events/Events.js",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"import React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {useParams, Link} from 'react-router-dom';\nimport {useState, useEffect} from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport {useAppAuth} from '../../context/auth-context';\nimport {useJobs} from '../../context/jobs-context';\nimport { useAlert, ADD } from '../../context/alert-context';\nimport {getDictFromAr, getArFromDict, convertISOStrToLocalDateTime, orderArByProp} from '../../utils';\nimport Button from '../FormShared/Button';\nimport Checkbox from '../FormShared/Checkbox';\nimport SelectGroup from '../FormShared/SelectGroup';\nimport Input from '../FormShared/Input';\nimport Alert from '../FormShared/Alert';\n\nconst EVENTS_SORT_OPTIONS = [\n  {label: 'oldest to newest', value: 'oldest to newest'},\n  {label: 'newest to oldest', value: 'newest to oldest'}\n]\n\nconst localizer = momentLocalizer(moment);\n\nfunction Events(props) {\n  const {jobId} = useParams();\n  const [eventsDict, setEventsDict] = useState({});\n  const [eventsSortBy, setEventsSortBy] = useState('oldest to newest');\n  const [filterHidePastEvents, setFilterHidePastEvents] = useState(true);\n  const [filterEventPhoneMeeting, setFilterEventPhoneMeeting] = useState(true);\n  const [filterEventVideoMeeting, setFilterEventVideoMeeting] = useState(true);\n  const [filterEventOnlineTestInterview, setFilterEventOnlineTestInterview] = useState(true);\n  const [filterEventOnlineTestAutomated, setFilterEventOnlineTestAutomated] = useState(true);\n  const [filterEventTakeHomeTestScheduled, setFilterEventTakeHomeTestScheduled] = useState(true);\n  const [filterEventTakeHomeTestUnscheduled, setFilterEventTakeHomeTestUnscheduled] = useState(true);\n\n  const { isAuthenticated, user, getAccessTokenSilently } = useAuth0();\n  const { name, picture, email } = user;\n  const {login, getUserGuid, userGuid, userEmail, sessionToken} = useAppAuth();\n  const {jobsDict, getJobsForUser} = useJobs();\n  const { alertDispatch } = useAlert();\n\n  const buttonOnClickHandler = (ev) => {\n    ev.preventDefault();\n    let {id, name} = ev.target;\n    let eventGuid = name;\n    fetch(`http://localhost:3000/api/events/${eventGuid}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${sessionToken}`\n      }\n    })\n    .then(resp => resp.json())\n    .then(json => {\n      if (json.status === 'success') {\n        let copyEventDict = {...eventsDict};\n        delete copyEventDict[eventGuid];\n        setEventsDict(copyEventDict);\n      }\n    })\n    .catch(err => console.error('err', err))\n  }\n\n  const inputOnChangeHandler = (ev) => {\n    const {name, value, checked, id} = ev.target;\n    if (name === 'eventsSortBy') {\n      setEventsSortBy(value);\n    } else if (id === 'filterHidePastEvents') {\n      setFilterHidePastEvents(!filterHidePastEvents)\n    } else if (id === 'filterEventPhoneMeeting') {\n      setFilterEventPhoneMeeting(!filterEventPhoneMeeting)\n    } else if (id === 'filterEventVideoMeeting') {\n      setFilterEventVideoMeeting(!filterEventVideoMeeting)\n    } else if (id === 'filterEventOnlineTestInterview') {\n      setFilterEventOnlineTestInterview(!filterEventOnlineTestInterview)\n    } else if (id === 'filterEventOnlineTestAutomated') {\n      setFilterEventOnlineTestAutomated(!filterEventOnlineTestAutomated)\n    } else if (id === 'filterEventTakeHomeTestScheduled') {\n      setFilterEventTakeHomeTestScheduled(!filterEventTakeHomeTestScheduled)\n    } else if (id === 'filterEventTakeHomeTestUnscheduled') {\n      setFilterEventTakeHomeTestUnscheduled(!filterEventTakeHomeTestUnscheduled)\n    }\n  }\n\n  const callSecureApi = async (uGuid) => {\n    try {\n      const token = await getAccessTokenSilently();\n      login({userEmail: email, sessionToken: token, userGuid: uGuid})\n\n      let eventsUrl;\n      if (!jobId && uGuid) {\n        eventsUrl = `http://localhost:3000/api/events/user/${uGuid}`;\n      } else if (jobId) {\n        eventsUrl = `http://localhost:3000/api/events/job/${jobId}`\n      }\n      if (eventsUrl) {\n        fetch(eventsUrl, {\n          headers: {Authorization: `Bearer ${token}`}\n        })\n          .then(resp => {\n            if (!resp.ok) {\n              alertDispatch({ type: ADD, payload: {type: 'error', message: `HTTP Status Code: ${resp.status}`} })\n            } \n            return resp.json();\n          })\n          .then(json => {\n            if (json.events.length) {\n              let evDict = json.events ? getDictFromAr(json.events): {};\n              setEventsDict(evDict);\n            } else if (json.type === 'error') {\n              alertDispatch({ type: ADD, payload: {type: 'error', message: json.message} })\n            }\n          })\n          .catch(err => console.error('error', err))\n      }\n\n      let jobsUrl;\n      if (uGuid) {\n        jobsUrl = `http://localhost:3000/api/jobs/all/${uGuid}`;\n        getJobsForUser({url: jobsUrl, token})\n      }\n\n    } catch (error) {\n      console.error('error', error)\n    }\n  };\n\n  const filterEventsByEventFormat = (eventsList) => {\n    let filteredList;\n    let includeList = [];\n    let excludeList = [];\n\n    const formatDict = {\n      'phone meeting': filterEventPhoneMeeting,\n      'video meeting': filterEventVideoMeeting,\n      'online test, interview': filterEventOnlineTestInterview,\n      'online test, automated': filterEventOnlineTestAutomated,\n      'take-home assessment, scheduled': filterEventTakeHomeTestScheduled,\n      'take-home assessment, unscheduled': filterEventTakeHomeTestUnscheduled\n    }\n\n    filteredList = eventsList.filter(ev => {\n      let format = ev.format;\n      if (formatDict[format]) {\n        return ev;\n      }\n    })\n    return filteredList;\n  }\n\n  useEffect(() => {\n    getUserGuid({userEmail: email})\n      .then(uGuid => {\n        callSecureApi(uGuid);\n      })\n  }, [])\n\n  let eventsAr = Object.keys(eventsDict).length ? getArFromDict(eventsDict) : [];\n  let sortOrder = eventsSortBy === 'oldest to newest' ? 'asc' : 'desc'; \n  orderArByProp(eventsAr, 'date_time', sortOrder);\n  let filteredEvents;\n  if (!filterHidePastEvents) {\n    filteredEvents = eventsAr;\n  } else {\n    filteredEvents = eventsAr.filter(ev => {\n      let eventDate = new Date(ev.date_time);\n      let curDate = new Date();\n      return eventDate >= curDate;\n    });  \n  }\n  //filter for the event type\n  filteredEvents = filterEventsByEventFormat(filteredEvents);\n  let createUrl = `/events/new/${jobId}`;\n\n  const myEventsList = [];\n  filteredEvents.forEach(event => {\n    let evObj = {};\n    let dt = moment(event.date_time)\n    evObj.start = dt;\n    evObj.end = moment(event.date_time).add(1, \"hour\");\n    evObj.title = event.format;\n    myEventsList.push(evObj);\n  });\n  \n  return (\n    <div>\n      <h1 className=\"view_title\">EVENTS LIST</h1>\n\n      <form>\n        <SelectGroup name=\"eventsSortBy\" value={eventsSortBy} label=\"sort by\"\n          inputOnChangeHandler={inputOnChangeHandler} optionsList={EVENTS_SORT_OPTIONS} />\n        <Checkbox checkboxVal={filterHidePastEvents} onChangeHandler={inputOnChangeHandler}\n          checkboxLabel='hide past events' name='filterHidePastEvents' checkClassName=''\n          id='filterHidePastEvents' />\n        <Checkbox checkboxVal={filterEventPhoneMeeting} onChangeHandler={inputOnChangeHandler}\n          checkboxLabel='show phone meetings' name='filterEventPhoneMeeting' checkClassName=''\n          id='filterEventPhoneMeeting' />\n        <Checkbox checkboxVal={filterEventVideoMeeting} onChangeHandler={inputOnChangeHandler}\n          checkboxLabel='show video meetings' name='filterEventVideoMeeting' checkClassName=''\n          id='filterEventVideoMeeting' />\n        <Checkbox checkboxVal={filterEventOnlineTestInterview} onChangeHandler={inputOnChangeHandler}\n          checkboxLabel='show online tests, interview' name='filterEventOnlineTestInterview' checkClassName=''\n          id='filterEventOnlineTestInterview' />\n        <Checkbox checkboxVal={filterEventOnlineTestAutomated} onChangeHandler={inputOnChangeHandler}\n          checkboxLabel='show online tests, automated' name='filterEventOnlineTestAutomated' checkClassName=''\n          id='filterEventOnlineTestAutomated' />\n        <Checkbox checkboxVal={filterEventTakeHomeTestScheduled} onChangeHandler={inputOnChangeHandler}\n          checkboxLabel='show take-home assessments, scheduled' name='filterEventTakeHomeTestScheduled' checkClassName=''\n          id='filterEventTakeHomeTestScheduled' />\n        <Checkbox checkboxVal={filterEventTakeHomeTestUnscheduled} onChangeHandler={inputOnChangeHandler}\n          checkboxLabel='show take-home assessments, unscheduled' name='filterEventTakeHomeTestUnscheduled' checkClassName=''\n          id='filterEventTakeHomeTestUnscheduled' />\n      </form>\n\n      <Calendar\n        localizer={localizer}\n        events={myEventsList}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500 }}\n        views={['month', 'day', 'agenda']}\n      />\n\n      <div className=\"list_container\">\n        { filteredEvents.map(event => {\n          let url = `/events/edit/${event.guid}`;\n          let job_guid = event.job_guid;\n          let jobUrl = `/jobs/${job_guid}`;\n          return (\n            <div key={event.guid} className=\"list_item_container\">\n              <Link to={url}>\n                <div><span className=\"list_item_label\">format:</span> {event.format}</div>\n                <div><span className=\"list_item_label\">contact:</span> {event.contact}</div>\n                <div><span className=\"list_item_label\">notes:</span> {event.notes}</div>\n                <div><span className=\"list_item_label\">description:</span> {event.description}</div>\n                <div><span className=\"list_item_label\">follow up:</span> {event.follow_up}</div>\n                <div><span className=\"list_item_small\">date/time:</span> {convertISOStrToLocalDateTime(event.date_time)}</div>\n              </Link>\n              <Link to={jobUrl}>\n                {jobsDict && jobsDict[job_guid] && jobsDict[job_guid].name && (\n                  <div><span className=\"list_item_label\">job name:</span> {jobsDict[job_guid].name}</div>\n                )}\n                {jobsDict && jobsDict[job_guid] && jobsDict[job_guid].company_name && (\n                  <div><span className=\"list_item_label\">company name:</span> {jobsDict[job_guid].company_name}</div>\n                )}\n              </Link>\n              <div className=\"button_container\">\n                <Button id=\"buttonDelete\" name={event.guid} label=\"Delete\" clickHandler={buttonOnClickHandler} size=\"wide\"/>\n              </div>\n            </div>\n          )\n        })}        \n      </div>\n    </div>\n  );\n};\n\nexport default Events;","/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/AuthenticatedNavBar.js",["208"],"import React, {useState} from \"react\";\nimport classNames from 'classnames/bind';\nimport MainNav from \"./MainNav\";\nimport AuthNav from \"./AuthNav\";\nimport styles from './NavBar.module.css';\n\nlet cx = classNames.bind(styles);\n\nconst AuthenticatedNavBar = ({showNavMenu, toggleNavMenuDisplay}) => {\n  let hamburgerClassName = cx({\n    hamburger_icon: true,\n    hamburger_icon_rotated: showNavMenu\n  });\n\n  let navMenuClassName = cx({\n    nav_menu: showNavMenu\n  })\n\n  return (\n    <header className=\"header header_authenticated\">\n      <nav >\n        <div className={hamburgerClassName} onClick={(ev) => toggleNavMenuDisplay(ev)}>&#9776;</div>\n        {showNavMenu && (\n          <div className={navMenuClassName}>\n            <div className={styles.close_icon} onClick={(ev) => toggleNavMenuDisplay(ev)}>X</div>\n            <MainNav />\n            <AuthNav />\n          </div>\n        )}\n      </nav>\n      <div className=\"logo_title logo_title_authenticated\">Jobs Tracker</div>\n    </header>\n  );\n};\n\nexport default AuthenticatedNavBar;","/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/LoginButton.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/UnauthenticatedNavBar.js",["209","210","211"],"// src/components/nav-bar.js\nimport React, {useState} from \"react\";\nimport MainNav from \"./MainNav\";\nimport AuthNav from \"./AuthNav\";\n\nconst UnauthenticatedNavBar = () => {\n  return (\n    <header className=\"header header_unauthenticated\">\n      <div className=\"logo_title logo_title_unauthenticated\">Jobs Tracker</div>\n    </header>\n  );\n};\n\nexport default UnauthenticatedNavBar;","/Users/carolchung/programming/projects/job_tracker/client/src/components/Events/EventsForm.js",["212","213","214","215","216","217","218","219","220"],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/MainNav.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Loading.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/AuthNav.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/AuthenticationButton.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Header/LogoutButton.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/index.tsx",["221"],"import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Auth0ProviderWithHistory from \"./auth/auth0-provider-with-history\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst audience = 'http://localhost:3000';\n//`https://${process.env.REACT_APP_AUTH0_DOMAIN}/api/v2/`;\n\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Auth0ProviderWithHistory>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["222","223"],"/Users/carolchung/programming/projects/job_tracker/client/src/components/Jobs/JobsForm.js",["224","225","226","227","228","229","230"],"import * as React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport {useParams, Redirect, useHistory} from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport {useAppAuth} from '../../context/auth-context';\nimport {useJobs} from '../../context/jobs-context';\nimport { useAlert, ADD } from '../../context/alert-context';\nimport Input from '../FormShared/Input';\nimport TextArea from '../FormShared/TextArea';\nimport SelectGroup from '../FormShared/SelectGroup';\nimport Button from '../FormShared/Button';\nimport styles from './Jobs.module.css';\n\nconst JOB_STATUS_OPTIONS = [\n  {label: 'select a status', value: 'none'},\n  {label: 'applied', value: 'applied'},\n  {label: 'interview scheduled', value: 'interview scheduled'},\n  {label: 'in process', value: 'in process'},\n  {label: 'archived', value: 'archived'}\n];\nconst JOB_SOURCE_OPTIONS = [\n  {label: 'select a source', value: 'none'},\n  {label: 'hacker news', value: 'hacker news'},\n  {label: 'women who code', value: 'women who code'},\n  {label: 'diversify tech', value: 'diversify tech'},\n  {label: 'remotive.io', value: 'remotive.io'},\n  {label: 'we work remotely', value: 'we work remotely'},\n  {label: 'remote woman', value: 'remote woman'},\n  {label: 'teal community', value: 'teal community'}  \n];\n\nfunction JobsForm({type, jobId}) {\n  const {updateJobsDict, jobsDict} = useJobs();\n  const [formStatus, setFormStatus] = React.useState('inProgress'); //redirectJobs, redirectEventForm\n  const [jobName, setJobName] = React.useState('');\n  const [jobStatus, setJobStatus] = React.useState('none');\n  const [companyName, setCompanyName] = React.useState('');\n  const [jobUrl, setJobUrl] = React.useState('');\n  const [jobDescription, setJobDescription] = React.useState('');\n  const [jobQuestions, setJobQuestions] = React.useState('');\n  const [jobSource, setJobSource] = React.useState('none');\n  const [jobGuid, setJobGuid] = React.useState(null);\n  const [jobCreatedAt, setJobCreatedAt] = React.useState('');\n  const {userGuid, sessionToken, getUserGuid, userEmail} = useAppAuth();\n  const { alertDispatch } = useAlert();\n  let inputRef = React.useRef(null);\n\n  //input change handlers\n  const inputOnChangeHandler = (ev) => {\n    const {name, value} = ev.target;\n    const nameToSetterDict = {\n      'jobName': function(v) {\n        setJobName(v)},\n      'jobStatus': function(v) {\n        setJobStatus(v)},\n      'companyName': function(v) {\n        setCompanyName(v)},\n      'jobUrl': function(v) {\n        setJobUrl(v)},\n      'jobDescription': function(v) {\n        setJobDescription(v)},\n      'jobQuestions': function(v) {\n        setJobQuestions(v)},\n      'jobSource': function(v) {\n        setJobSource(v)}\n    }\n    nameToSetterDict[name](value);\n  }\n\n  //button click handlers\n  const buttonOnClickHandler = (ev) => {\n    ev.preventDefault();\n    const {id} = ev.target;\n\n    if (id === 'buttonCancel') {\n      //handle buttonCancel\n      if (type === 'create') {\n        setJobName('');\n        setJobStatus('');\n        setCompanyName('');\n        setJobUrl('');\n        setJobDescription('');\n        setJobQuestions('');\n        setJobSource('');\n      } else if (type === 'edit') {\n\n      }\n    }\n\n    if (id === 'buttonSave' || id === 'buttonSaveJobEvent') {\n      getUserGuid({userEmail})\n        .then(uGuid => {\n            //handle buttonSave\n            let body = {\n              name: jobName, \n              status: jobStatus, \n              description: jobDescription, \n              url: jobUrl, \n              company_name: companyName, \n              questions: jobQuestions, \n              source: jobSource, \n              user_guid: uGuid\n            }\n            if (type === 'create') {\n              let guid = uuidv4();\n              let curDate = new Date();\n              body.guid = guid;\n              body.created_at = curDate.toISOString();\n              fetch(`http://localhost:3000/api/jobs/`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${sessionToken}`\n                },\n                body: JSON.stringify(body)\n              })\n              .then(resp => {\n                if (resp.status === 201) {\n                  updateJobsDict(body);\n                }\n                return resp.json(); \n              })\n              .then(json => {\n                if (json.job_guid) {\n                  alertDispatch({ type: ADD, payload: {type: 'success', message: json.message} });\n                  setJobGuid(json.job_guid);\n                } else {\n                  alertDispatch({ type: ADD, payload: {type: 'error', message: json.message} });\n                }\n              })\n              .catch(err => console.error('err', err))\n            } else if (type === 'edit' && jobId.length) {\n              fetch(`http://localhost:3000/api/jobs/update/${jobId}`, {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${sessionToken}`\n                },\n                body: JSON.stringify(body)\n              })\n              .then(resp => {\n                if (resp.status === 201) {\n                  body.guid = jobId;\n                  body.created_at = jobCreatedAt;\n                  updateJobsDict(body);\n                }\n                return resp.json();\n              })\n              .then(json => {\n                if (json.job_guid) {\n                  alertDispatch({ type: ADD, payload: {type: 'success', message: json.message} });\n                } else {\n                  alertDispatch({ type: ADD, payload: {type: 'error', message: json.message} });\n                }\n\n              })\n              .catch(err => console.error('err', err))\n            }\n        })\n    } \n\n    if (id === 'buttonSave') {\n      setFormStatus('redirectJobs')\n    }\n  }\n\n  //if type=edit, get existing form fields\n  React.useEffect(() => {\n    if (type === 'edit' && jobId && sessionToken) {\n      let url = `http://localhost:3000/api/jobs/${jobId}`\n      fetch(url, {\n        headers: {\n          'Authorization': `Bearer ${sessionToken}`\n        }\n      })\n        .then(resp => resp.json())\n        .then(json => {\n          console.log('json', json)\n          const {company_name, description, name, questions, source, status, url, created_at} = json.job;\n          if (company_name) {\n            setCompanyName(company_name);\n          }\n          if (name) {\n            setJobName(name);\n          }\n          if (status) {\n            setJobStatus(status);\n          }\n          if (url) {\n            setJobUrl(url);\n          }\n          if (description) {\n            setJobDescription(description);\n          }\n          if (questions) {\n            setJobQuestions(questions);\n          }\n          if (source) {\n            setJobSource(source);\n          }\n          if (created_at) {\n            setJobCreatedAt(created_at);\n          }\n        })\n        .catch(err => console.error('err', err))\n   }\n  }, [])\n\n  React.useEffect(() => {\n    if (inputRef) {\n      inputRef.current.focus();\n    }\n  }, [inputRef]);\n\n  React.useEffect(() => {\n    if (jobGuid) {\n      setFormStatus('redirectEventForm');\n    }\n  }, [jobGuid])\n\n  if (formStatus === 'redirectJobs') {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/jobs\"\n        }}\n      />\n    )\n  }\n\n  if (formStatus === 'redirectEventForm') {\n    return (\n      <Redirect\n        to={{\n          pathname: `/events/new/${jobGuid}`\n        }}\n      />\n    )\n  }\n\n  if (formStatus === 'inProgress') {\n    return (\n      <div>\n        <h1 className=\"view_title\">JOBS FORM</h1>\n        <form>\n          <Input type=\"text\" value={jobName} name=\"jobName\" inputRef={inputRef}\n            inputOnChangeHandler={inputOnChangeHandler} label=\"name\"/>\n          <SelectGroup \n            label=\"status\" name=\"jobStatus\" value={jobStatus} \n            inputOnChangeHandler={inputOnChangeHandler} optionsList={JOB_STATUS_OPTIONS} />\n          <Input type=\"text\" value={companyName} name=\"companyName\" inputOnChangeHandler={inputOnChangeHandler} label=\"company\"/>\n          <Input type=\"url\" value={jobUrl} name=\"jobUrl\"\n            inputOnChangeHandler={inputOnChangeHandler} label=\"url\"/>\n          <TextArea value={jobDescription} name=\"jobDescription\" inputOnChangeHandler={inputOnChangeHandler}  \n            label=\"description\"/>\n          <TextArea value={jobQuestions} name=\"jobQuestions\" inputOnChangeHandler={inputOnChangeHandler}  \n            label=\"questions\"/>\n          <SelectGroup \n            label=\"source\" name=\"jobSource\" value={jobSource} \n            inputOnChangeHandler={inputOnChangeHandler} optionsList={JOB_SOURCE_OPTIONS} />\n          <div>\n            <Button id=\"buttonSaveJobEvent\" clickHandler={buttonOnClickHandler} \n              label=\"Save and Create Event\" size=\"wide\"/>\n            <Button id=\"buttonSave\" clickHandler={buttonOnClickHandler} \n              label=\"Save\"/>\n            <Button id=\"buttonCancel\" clickHandler={buttonOnClickHandler} \n              label=\"Cancel\"/>\n          </div>\n        </form>\n      </div>\n    );\n  }\n};\n\nexport default JobsForm;","/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/Button.tsx",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/Checkbox.tsx",["231"],"import React from 'react';\nimport classNames from 'classnames/bind';\nimport './Checkbox.css';\n\ntype CheckboxProps = {\n  checkboxVal: boolean;\n  onChangeHandler(ev: React.SyntheticEvent): void;\n  checkboxLabel?: string;\n  id?: string;\n  name?: string;\n  checkClassName?: string;\n  size?: string;\n}\n\nconst Checkbox = ({ checkboxVal, onChangeHandler, checkboxLabel, id, name, checkClassName, size }: CheckboxProps) => {\n  let checkClass;\n  if (checkClassName && size && size === 'largeCheckbox') {\n    checkClass = `form-group-large ${checkClassName}`\n  } else if (checkClassName) {\n    checkClass = `form-group ${checkClassName}`\n  }\n\n  let labelClassName = 'checkbox-label';\n  if (size && size === 'largeCheckbox') {\n    labelClassName = `checkbox-label ${size}`\n  }\n  if (checkboxLabel) {\n    return (\n      <div className={checkClass}>\n        <input type=\"checkbox\" className=\"list-item-input\"\n          checked={checkboxVal}\n          onChange={ev => onChangeHandler(ev)}\n          name={name} />\n        {checkboxLabel && (\n          <label className={labelClassName} onClick={ev => onChangeHandler(ev)} id={id}>{checkboxLabel}</label>\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <div className={checkClass}>\n      <input checked={checkboxVal} type=\"checkbox\" className=\"list-item-input\"\n        onChange={ev => onChangeHandler(ev)} name={name}\n        />\n      <label className={labelClassName} onClick={ev => onChangeHandler(ev)} id={id} />\n    </div>\n  )\n}\n\nexport default Checkbox;","/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/Input.tsx",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/SelectGroup.tsx",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/TextArea.tsx",[],"/Users/carolchung/programming/projects/job_tracker/client/src/components/FormShared/Alert.js",[],"/Users/carolchung/programming/projects/job_tracker/client/src/context/alert-context.js",["232","233","234"],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":2,"column":13,"nodeType":"241","messageId":"242","endLine":2,"endColumn":21},{"ruleId":"239","severity":1,"message":"243","line":3,"column":9,"nodeType":"241","messageId":"242","endLine":3,"endColumn":17},{"ruleId":"239","severity":1,"message":"244","line":4,"column":10,"nodeType":"241","messageId":"242","endLine":4,"endColumn":18},{"ruleId":"239","severity":1,"message":"243","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"245","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":26},{"ruleId":"239","severity":1,"message":"246","line":3,"column":20,"nodeType":"241","messageId":"242","endLine":3,"endColumn":26},{"ruleId":"239","severity":1,"message":"247","line":4,"column":3,"nodeType":"241","messageId":"242","endLine":4,"endColumn":9},{"ruleId":"239","severity":1,"message":"248","line":5,"column":3,"nodeType":"241","messageId":"242","endLine":5,"endColumn":8},{"ruleId":"239","severity":1,"message":"249","line":6,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":11},{"ruleId":"250","severity":1,"message":"251","line":19,"column":11,"nodeType":"252","endLine":19,"endColumn":70},{"ruleId":"239","severity":1,"message":"246","line":3,"column":20,"nodeType":"241","messageId":"242","endLine":3,"endColumn":26},{"ruleId":"239","severity":1,"message":"248","line":5,"column":3,"nodeType":"241","messageId":"242","endLine":5,"endColumn":8},{"ruleId":"239","severity":1,"message":"249","line":6,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":11},{"ruleId":"239","severity":1,"message":"253","line":18,"column":8,"nodeType":"241","messageId":"242","endLine":18,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":27,"column":26,"nodeType":"256","messageId":"257","endLine":27,"endColumn":28},{"ruleId":"254","severity":1,"message":"255","line":27,"column":66,"nodeType":"256","messageId":"257","endLine":27,"endColumn":68},{"ruleId":"239","severity":1,"message":"258","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":26},{"ruleId":"239","severity":1,"message":"243","line":1,"column":28,"nodeType":"241","messageId":"242","endLine":1,"endColumn":36},{"ruleId":"239","severity":1,"message":"259","line":2,"column":20,"nodeType":"241","messageId":"242","endLine":2,"endColumn":46},{"ruleId":"239","severity":1,"message":"260","line":3,"column":8,"nodeType":"241","messageId":"242","endLine":3,"endColumn":15},{"ruleId":"239","severity":1,"message":"261","line":6,"column":15,"nodeType":"241","messageId":"242","endLine":6,"endColumn":25},{"ruleId":"239","severity":1,"message":"262","line":7,"column":9,"nodeType":"241","messageId":"242","endLine":7,"endColumn":22},{"ruleId":"239","severity":1,"message":"263","line":12,"column":5,"nodeType":"241","messageId":"242","endLine":12,"endColumn":7},{"ruleId":"239","severity":1,"message":"264","line":16,"column":11,"nodeType":"241","messageId":"242","endLine":16,"endColumn":26},{"ruleId":"239","severity":1,"message":"265","line":16,"column":34,"nodeType":"241","messageId":"242","endLine":16,"endColumn":56},{"ruleId":"239","severity":1,"message":"266","line":17,"column":11,"nodeType":"241","messageId":"242","endLine":17,"endColumn":15},{"ruleId":"239","severity":1,"message":"267","line":17,"column":17,"nodeType":"241","messageId":"242","endLine":17,"endColumn":24},{"ruleId":"239","severity":1,"message":"268","line":17,"column":26,"nodeType":"241","messageId":"242","endLine":17,"endColumn":31},{"ruleId":"239","severity":1,"message":"269","line":18,"column":11,"nodeType":"241","messageId":"242","endLine":18,"endColumn":16},{"ruleId":"239","severity":1,"message":"270","line":18,"column":18,"nodeType":"241","messageId":"242","endLine":18,"endColumn":29},{"ruleId":"239","severity":1,"message":"271","line":18,"column":31,"nodeType":"241","messageId":"242","endLine":18,"endColumn":39},{"ruleId":"239","severity":1,"message":"272","line":18,"column":41,"nodeType":"241","messageId":"242","endLine":18,"endColumn":50},{"ruleId":"273","severity":1,"message":"274","line":54,"column":32,"nodeType":"275","messageId":"276","endLine":54,"endColumn":34},{"ruleId":"239","severity":1,"message":"240","line":2,"column":13,"nodeType":"241","messageId":"242","endLine":2,"endColumn":21},{"ruleId":"239","severity":1,"message":"277","line":16,"column":8,"nodeType":"241","messageId":"242","endLine":16,"endColumn":13},{"ruleId":"239","severity":1,"message":"253","line":17,"column":8,"nodeType":"241","messageId":"242","endLine":17,"endColumn":13},{"ruleId":"239","severity":1,"message":"264","line":38,"column":11,"nodeType":"241","messageId":"242","endLine":38,"endColumn":26},{"ruleId":"239","severity":1,"message":"266","line":39,"column":11,"nodeType":"241","messageId":"242","endLine":39,"endColumn":15},{"ruleId":"239","severity":1,"message":"267","line":39,"column":17,"nodeType":"241","messageId":"242","endLine":39,"endColumn":24},{"ruleId":"239","severity":1,"message":"271","line":40,"column":30,"nodeType":"241","messageId":"242","endLine":40,"endColumn":38},{"ruleId":"239","severity":1,"message":"272","line":40,"column":40,"nodeType":"241","messageId":"242","endLine":40,"endColumn":49},{"ruleId":"239","severity":1,"message":"278","line":46,"column":10,"nodeType":"241","messageId":"242","endLine":46,"endColumn":12},{"ruleId":"239","severity":1,"message":"279","line":67,"column":25,"nodeType":"241","messageId":"242","endLine":67,"endColumn":32},{"ruleId":"239","severity":1,"message":"280","line":132,"column":9,"nodeType":"241","messageId":"242","endLine":132,"endColumn":20},{"ruleId":"239","severity":1,"message":"281","line":133,"column":9,"nodeType":"241","messageId":"242","endLine":133,"endColumn":20},{"ruleId":"273","severity":1,"message":"274","line":144,"column":41,"nodeType":"275","messageId":"276","endLine":144,"endColumn":43},{"ruleId":"282","severity":1,"message":"283","line":158,"column":6,"nodeType":"284","endLine":158,"endColumn":8,"suggestions":"285"},{"ruleId":"239","severity":1,"message":"286","line":175,"column":7,"nodeType":"241","messageId":"242","endLine":175,"endColumn":16},{"ruleId":"239","severity":1,"message":"243","line":1,"column":16,"nodeType":"241","messageId":"242","endLine":1,"endColumn":24},{"ruleId":"239","severity":1,"message":"243","line":2,"column":16,"nodeType":"241","messageId":"242","endLine":2,"endColumn":24},{"ruleId":"239","severity":1,"message":"287","line":3,"column":8,"nodeType":"241","messageId":"242","endLine":3,"endColumn":15},{"ruleId":"239","severity":1,"message":"288","line":4,"column":8,"nodeType":"241","messageId":"242","endLine":4,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":2,"column":13,"nodeType":"241","messageId":"242","endLine":2,"endColumn":21},{"ruleId":"239","severity":1,"message":"244","line":5,"column":10,"nodeType":"241","messageId":"242","endLine":5,"endColumn":18},{"ruleId":"239","severity":1,"message":"289","line":6,"column":9,"nodeType":"241","messageId":"242","endLine":6,"endColumn":18},{"ruleId":"239","severity":1,"message":"290","line":15,"column":7,"nodeType":"241","messageId":"242","endLine":15,"endColumn":25},{"ruleId":"239","severity":1,"message":"291","line":49,"column":10,"nodeType":"241","messageId":"242","endLine":49,"endColumn":19},{"ruleId":"239","severity":1,"message":"271","line":52,"column":10,"nodeType":"241","messageId":"242","endLine":52,"endColumn":18},{"ruleId":"239","severity":1,"message":"270","line":52,"column":34,"nodeType":"241","messageId":"242","endLine":52,"endColumn":45},{"ruleId":"239","severity":1,"message":"272","line":52,"column":47,"nodeType":"241","messageId":"242","endLine":52,"endColumn":56},{"ruleId":"282","severity":1,"message":"292","line":216,"column":6,"nodeType":"284","endLine":216,"endColumn":8,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":9,"column":7,"nodeType":"241","messageId":"242","endLine":9,"endColumn":15},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"244","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":18},{"ruleId":"239","severity":1,"message":"289","line":3,"column":9,"nodeType":"241","messageId":"242","endLine":3,"endColumn":18},{"ruleId":"239","severity":1,"message":"261","line":3,"column":30,"nodeType":"241","messageId":"242","endLine":3,"endColumn":40},{"ruleId":"239","severity":1,"message":"296","line":12,"column":8,"nodeType":"241","messageId":"242","endLine":12,"endColumn":14},{"ruleId":"239","severity":1,"message":"297","line":33,"column":26,"nodeType":"241","messageId":"242","endLine":33,"endColumn":34},{"ruleId":"239","severity":1,"message":"271","line":44,"column":10,"nodeType":"241","messageId":"242","endLine":44,"endColumn":18},{"ruleId":"282","severity":1,"message":"298","line":207,"column":6,"nodeType":"284","endLine":207,"endColumn":8,"suggestions":"299"},{"ruleId":"294","severity":1,"message":"300","line":2,"column":8,"nodeType":"241","messageId":"242","endLine":2,"endColumn":18},{"ruleId":"239","severity":1,"message":"301","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":30},{"ruleId":"239","severity":1,"message":"302","line":1,"column":44,"nodeType":"241","messageId":"242","endLine":1,"endColumn":54},{"ruleId":"239","severity":1,"message":"262","line":4,"column":9,"nodeType":"241","messageId":"242","endLine":4,"endColumn":22},"no-native-reassign",["303"],"no-negated-in-lhs",["304"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useAuth0' is defined but never used.","'Component' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Alert' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'useEffect' is defined but never used.","'withAuthenticationRequired' is defined but never used.","'Loading' is defined but never used.","'useHistory' is defined but never used.","'getDictFromAr' is defined but never used.","'cx' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'getAccessTokenSilently' is assigned a value but never used.","'name' is assigned a value but never used.","'picture' is assigned a value but never used.","'email' is assigned a value but never used.","'login' is assigned a value but never used.","'getUserGuid' is assigned a value but never used.","'userGuid' is assigned a value but never used.","'userEmail' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Input' is defined but never used.","'id' is assigned a value but never used.","'checked' is assigned a value but never used.","'includeList' is assigned a value but never used.","'excludeList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callSecureApi', 'email', and 'getUserGuid'. Either include them or remove the dependency array.","ArrayExpression",["305"],"'createUrl' is assigned a value but never used.","'MainNav' is defined but never used.","'AuthNav' is defined but never used.","'useParams' is defined but never used.","'EVENT_NAME_OPTIONS' is assigned a value but never used.","'eventGuid' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'eventId', 'sessionToken', and 'type'. Either include them or remove the dependency array.",["306"],"@typescript-eslint/no-unused-vars","'audience' is assigned a value but never used.","'styles' is defined but never used.","'jobsDict' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'jobId', 'sessionToken', and 'type'. Either include them or remove the dependency array.",["307"],"'classNames' is defined but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},"Update the dependencies array to be: [callSecureApi, email, getUserGuid]",{"range":"314","text":"315"},"Update the dependencies array to be: [eventId, sessionToken, type]",{"range":"316","text":"317"},"Update the dependencies array to be: [jobId, sessionToken, type]",{"range":"318","text":"319"},[5981,5983],"[callSecureApi, email, getUserGuid]",[7274,7276],"[eventId, sessionToken, type]",[7088,7090],"[jobId, sessionToken, type]"]